# 4장 차원축소 회귀분석

## (예 4.5 - 4.8)

#### 데이터 로드

```{r}
dat1 <- read.csv(file = "data/ch4_dat1.csv")
dat1
x <- as.matrix(dat1)
```

#### (예 4.5)

특이치 분해

```{r}
s <- svd(x)
diag(s$d)
s$u
s$v
```


#### (예 4.6)

분산-공분산 행렬의 특이치 분해

```{r}
cov(x)
svd(cov(x))
```

상관계수 행렬의 특이치 분해

```{r}
cor(x)
svd(cor(x))
```


#### (예 4.7)

주성분 스코어

```{r}
x %*% s$v
```


#### (예 4.8)

제곱합-교차곱 행렬의 고유치 및 고유벡터

```{r}
eigen(t(x) %*% x)
```



## (예 4.10)

#### 데이터 로드

```{r}
dat2 <- read.csv("data/ch4_dat2.csv", fileEncoding = "euc-kr")
x <- as.matrix(dat2[, 2:6])
```

#### 상관계수행렬

```{r}
round(cor(x), 3)
```

#### 주성분분석

```{r}
pca_fit <- prcomp(x, center = TRUE, scale. = TRUE)
pca_fit
```

#### 상관계수행렬 고유치

```{r}
pca_var <- pca_fit$sdev^2
pca_var
```

#### 고유치 스크리 도표

```{r}
screeplot(pca_fit, type = "lines", main = "scree plot")
```


#### 고유치별 기여율 도표

```{r}
rate_var <- pca_var / sum(pca_var)
rate_var
categories <- c("PC1", "PC2", "PC3", "PC4", "PC5")
barplot(rate_var,
  names.arg = categories, cex.axis = 1,
  ylab = "Variance proportion explained by PC",
  col = "blue", space = 0.5, width = 1, ylim = c(0, 1)
)
```


## (예 4.12)

#### 데이터 로드

```{r}
dat3 <- read.csv(file = "data/ch4_dat3.csv")
dat3
x <- as.matrix(dat3[, 1:3])
```

#### 주성분분석

```{r}
pca_fit <- prcomp(x, center = TRUE, scale. = FALSE)
pca_fit
```

#### 표본 분산-공분산 행렬의 고유치

```{r}
pca_var <- pca_fit$sdev^2
pca_var
```

#### 주성분 스코어

```{r}
PRC <- predict(pca_fit, x)
PRC
```

#### 주성분 회귀분석

학습데이터 생성

```{r}
dat4 <- as.data.frame(cbind(PRC, y = dat3$y))
```

모형 추정

```{r}
lm_fit <- lm(y ~ PC1 + PC2, data = dat4)
summary(lm_fit)
anova(lm_fit)
```


## (예 4.14 - 4.15)

#### 패키지 로드

```{r}
library(pls)
```

#### 데이터 로드

```{r}
dat3 <- read.csv(file = "data/ch4_dat3.csv")
```

#### (예 4.14)

PLS 모형 추정

```{r}
pls_fit <- plsr(y ~ ., ncomp = 2, data = dat3)
```

잠재변수행렬 (T)

```{r}
scores(pls_fit)
```

X-로딩 행렬 (P)

```{r}
loadings(pls_fit)
```

가중치행렬 (W)

```{r}
loading.weights(pls_fit)
```

y-로딩 벡터 (b)

```{r}
Yloadings(pls_fit)
```

$\beta_{PLS}$

```{r}
coef(pls_fit, intercept = TRUE)
```


#### (예 4.15)

학습데이터 생성

```{r}
dat4 <- as.data.frame(cbind(scores(pls_fit), y = dat3$y))
```

모형 추정

```{r}
lm_fit <- lm(y ~ ., data = dat4)
summary(lm_fit)
anova(lm_fit)
```

