# 13장 비계층적 군집방법

데이터 읽기

```{r}
dat1 <- read.csv("data/ch12_dat1.csv")
dat2 <- dat1[, -1]
```

유클리디안 거리

```{r}
D1 <- dist(dat2)
D1 <- round(D1, 2)
D1
```

## (예 13.1)

군집 수 결정

```{r}
library(factoextra)

# may use scale data or raw data for the optimal k
s_dat2 <- scale(dat2)

fviz_nbclust(s_dat2, kmeans, method = "wss", k.max = 5) + 
  geom_vline(xintercept = 3, linetype = 2)

fviz_nbclust(s_dat2, kmeans, method = "gap_stat", k.max = 5)
fviz_nbclust(s_dat2, kmeans, method = "silhouette", k.max = 5)
```

K-means 알고리즘

```{r}
set.seed(123)
km <- kmeans(dat2, 3)
km
```

시각화

```{r}
fviz_cluster(km,
  data = dat2,
  ellipse.type = "convex",
  repel = TRUE, cex = 3
)
```


## (예 13.3)

패지키 로드

```{r}
library("cluster")
```

PAM 알고리즘

```{r}
pam_out <- pam(dat2, 3)
pam_out
```

각 군집에 속한 객체 수

```{r}
table(pam_out$clustering)
```

시각화

```{r}
fviz_cluster(pam_out,
  data = dat2,
  ellipse.type = "convex",
  repel = TRUE
)
```

실루엣 계산

```{r}
sil_pam <- silhouette(pam_out$clustering, dist(dat1))
sil_pam
mean(sil_pam[, 3])
```

실루엣 시각화

```{r}
library(factoextra)
fviz_silhouette(sil_pam)
```



## (예 13.8)

패키지 로드

```{r}
library(fpc)
```

디비스캔

```{r}
db <- dbscan(dat2, eps = 3, MinPts = 3)
db
```

군집 결과

```{r}
db$cluster
```

시각화

```{r}
fviz_cluster(db,
  data = dat2,
  ellipse.type = "convex",
  repel = TRUE
)
```

실루엣 계산

```{r}
library(cluster)
sil_db <- silhouette(db$cluster, dist(dat1))
mean(sil_db[, 3])
```

실루엣 시각화

```{r}
library(factoextra)
fviz_silhouette(sil_db)
```

