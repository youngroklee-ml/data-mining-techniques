# 15장 연관규칙

## (예 15.1 - 15.4)

#### 패키지 로드

```{r}
library(arules)
```

#### 데이터 로드

```{r}
df <- read.csv("data/ch15_transaction.csv")
```

#### 데이터 변환

```{r}
# convert a data frame into a list of transactions
transaction_list <- split(df$item, df$id)
print(transaction_list)

# convert a list into an object of class "transactions"
transactions <- as(transaction_list, "transactions")
print(transactions)

# retrieve item labels used in transactions
labels <- transactions@itemInfo$labels
print(labels)
```


#### 사용자 함수 생성

item vector를 `itemMatrix` object로 변환

```{r}
# A user defined function to convert a character vector of items to itemMatrix object
# - itemset: a vector of item labels in a itemset
# - labels: a vector of all labels ordered to be column order of output matrix
as_itemMatrix <- function(itemset, transactions) {
  as(
    matrix(labels %in% itemset, nrow = 1, dimnames = list(NULL, labels)), 
    "itemMatrix"
  )
}
```


#### (예 15.1) 지지도

X = {b, c}

```{r}
# create itemMatrix object for X = {b, c}, and compute the support
X <- as_itemMatrix(c("b", "c"), labels)
supp_X <- support(X, transactions)
print(supp_X)
```

R: X -> Y

```{r}
# create itemMatrix object for Y = {g}, and compute the support
Y <- as_itemMatrix(c("g"), labels)

# create a rule R: X -> Y, and compute the support
R <- rules(Y, X)
supp_R <- support(R, transactions)
print(supp_R)
```


#### (예 15.2) 신뢰도 및 개선도

신뢰도

```{r}
# confidence
conf_R <- supp_R / supp_X
print(conf_R)
# when using a function instead:
interestMeasure(R, "confidence", transactions)
```


개선도

```{r}
supp_Y <- support(Y, transactions)
lift_R <- conf_R / supp_Y
print(lift_R)
# when using a function instead:
interestMeasure(R, "lift", transactions)
```



#### (예 15.3) 빈발항목집합 생성: 최소 지지도 0.4

```{r}
itemsets <- apriori(
  transactions,
  parameter = list(
    support = 0.4,
    target = "frequent itemsets"
  ),
  control = list(verbose = FALSE)  # do not print progress
)

inspect(itemsets)
```

#### (예 15.4) 규칙 탐사: 최소 신뢰도 0.7

```{r}
rules <- ruleInduction(
  itemsets,
  transactions,
  confidence = 0.7,
  method = "apriori"
)

inspect(rules)
```


#### 빈발항목집합 + 규칙탐사

```{r}
apriori_results <- apriori(
  transactions,
  parameter = list(
    support = 0.4,
    confidence = 0.7,
    target = "rules"
  ),
  control = list(verbose = FALSE)  # do not print progress
)

inspect(apriori_results)
```


## (예 15.7 - 15.9)

#### 패키지 로드

```{r}
library(arulesSequences)
```

#### 데이터 로드

```{r}
# read specifically formatted data into transactions with temporal information
trans <- read_baskets(
  con = "data/ch15_sequence.txt",
  info = c("sequenceID", "eventID", "SIZE") # do not change the names
)
```

#### (예 15.7) 최대 시퀀스

모든 시퀀스 (최소 지지도 0.4)

```{r}
seqs <- cspade(trans, parameter = list(support = 0.4))
inspect(seqs)
```

최대 시퀀스 (최소 지지도 0.4)

```{r}
max_seqs <- subset(seqs, is.maximal(seqs))
inspect(max_seqs)
```


#### (예 15.8) 빈발항목집합

```{r}
itemsets <- cspade(trans, parameter = list(support = 0.4, maxlen = 1))
inspect(itemsets)
```


#### (예 15.9) 시퀀스 탐색

모든 빈발 시퀀스 (최소 신뢰도 0.5)

```{r}
rules <- ruleInduction(seqs, confidence = 0.5)
inspect(rules)
```

최대 빈발 시퀀스 (최소 신뢰도 0.5)

```{r}
max_rules <- ruleInduction(max_seqs, trans, confidence = 0.5)
inspect(max_rules)
```


